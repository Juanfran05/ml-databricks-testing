name: Lint and Test


on:
  pull_request:
    branches:
      - main


jobs:
  schema_for_linting_and_testing:
    name: Dummy print
    runs-on: ubuntu-latest
    environment:
      name: staging
    steps:
      - name: Printing
        run: echo "Test"

  lint:
    name: Lint and Test
    runs-on: ubuntu-latest
    environment:
      name: staging
    env:
      DATABRICKS_HOST: ${{ secrets.DATABRICKS_WORKSPACE }}
    # DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_STAGING_TOKEN }}

    steps:
      - name: Set up Python 3.8
        id: python_setup
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Check Out Repository
        id: checkout_repository
        uses: actions/checkout@v3

      - name: Installing Libraries
        id: needed_libraries
        run: pip install black

      - uses: actions/checkout@v2
      - name: Run Flake8 and black
        run: |
          echo "Running black"
          python -m black ${GITHUB_WORKSPACE} --check --diff --verbose

      - name: Installing pytest
        id: install_pytest
        run: pip install pytest

      - uses: actions/checkout@v2
      - name: Unit Tests
        id: python_unit_tests
        run: |
          echo "Running pytest"
          python -m pytest ${GITHUB_WORKSPACE}/tests/unit_tests \
          --doctest-modules \
          --junitxml=junit/unittest-${{ matrix.python-version }}.xml

      - name: Extract branch name
        run: |
          echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
          echo "${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
        id: extract_branch

      # Connect to azure
      - uses: Azure/login@v1
        name: Login to Azure
        with:
          creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'

      # Set databricks token as environmental variable
      - name: Generate databricks token
        id: generate-token
        run: |
          echo "DATABRICKS_TOKEN=$(az account get-access-token \
            --resource 2ff814a6-3304-4ab8-85cb-cd0e6f879c1d | jq .accessToken -r)" >> $GITHUB_ENV

      # Deploy code to the prod environment
      - name: Run integration tests on databricks
        id: integration_tests
        run: |
          json=$(cat $GITHUB_WORKSPACE/jobs/integration_tests_job.json)
          json=$(echo $json | jq -r ".git_source.git_branch = \"${{ steps.extract_branch.outputs.branch }}\"")
          echo "$json"
          JOB_ID=$(databricks jobs create --json "$json" | jq -r '.job_id')
          databricks jobs run-now --job-id "$JOB_ID"
          echo "$(python $GITHUB_WORKSPACE/jobs/job_waiter.py "$JOB_ID" >> GITHUB_OUTPUT

      # Fail workflow if integration tests job fail
      - name: run training pipeline
        if: ${{ steps.integration_tests.outputs.state == 'FAILED' }}
        run: exit 1
